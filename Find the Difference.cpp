//Given two strings s and t which consist of only lowercase letters.
//String t is generated by random shuffling string s and then add one more letter at a 
//random position.Find the letter that was added in t.
//主要是找出s和t字符串个差别的那个字母。
//方法一:是简单的hashmap的方式，找出那个不同
class Solution {
public:
    char findTheDifference(string s, string t) {
        unordered_map<char,int> mp1;
        char c;
        for (int i=0;i<s.size();++i)
        {
            mp1[s[i]]++;
        }
        for(int i=0;i<t.size();i++)
        {
            
           if(mp1.find(t[i])==mp1.end()||mp1[t[i]]==0)
             return t[i];
            else
                mp1[t[i]]--;
             
        }
        return 0;
    }
};
//方法2主要的方式是采用异或的方式相同为0不同为1，两个同的数异或为0，相互抵消，
class Solution {
public:
    char findTheDifference(string s, string t) {
        int temp=0 ,i;
        for (i=0;i<s.size();++i)
        {
            temp^=s[i]^t[i];
        }
           temp^=t[i];
        return temp;
    }
};
//第三种方法：参考网上的代码采用STL库accumulate函数返回。
class Solution {
public:
    char findTheDifference(string s, string t) {
    	s+=t;
        return accumulate(s.begin(), s.end(s), 0, bit_xor<int>());
    }
};